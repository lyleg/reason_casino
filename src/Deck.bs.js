// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Random = require("bs-platform/lib/js/random.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Card$ReactTemplate = require("./Card.bs.js");

function getRandomCard(deck) {
  var drawnCard = List.nth(deck, Random.$$int(List.length(deck)));
  var newDeck = List.filter((function (card) {
            return Caml_obj.caml_notequal(card, drawnCard);
          }))(deck);
  return /* tuple */[
          drawnCard,
          newDeck
        ];
}

function getCard(deck) {
  return /* tuple */[
          List.hd(deck),
          List.tl(deck)
        ];
}

function getCards(_cards, _deck, _numCards) {
  while(true) {
    var numCards = _numCards;
    var deck = _deck;
    var cards = _cards;
    if (numCards !== 0) {
      var match = getCard(deck);
      var remainingCards = numCards - 1 | 0;
      _numCards = remainingCards;
      _deck = match[1];
      _cards = /* :: */[
        match[0],
        cards
      ];
      continue ;
      
    } else {
      return /* tuple */[
              cards,
              deck
            ];
    }
  };
}

function shuffle(deck) {
  var cardPlusRandomTuples = List.map((function (c) {
          return /* tuple */[
                  Random.bits(/* () */0),
                  c
                ];
        }), deck);
  var sortedCardPlusRandomTuples = List.sort(Caml_obj.caml_compare, cardPlusRandomTuples);
  return List.map((function (prim) {
                return prim[1];
              }), sortedCardPlusRandomTuples);
}

function makeDeck() {
  return List.concat(List.map((function (value) {
                    return List.map((function (suit) {
                                  return /* tuple */[
                                          value,
                                          suit
                                        ];
                                }), Card$ReactTemplate.suits);
                  }), Card$ReactTemplate.values));
}

function printDeck(deck) {
  return List.iter((function (card) {
                console.log(Card$ReactTemplate.printCard(card));
                return /* () */0;
              }), deck);
}

exports.getRandomCard = getRandomCard;
exports.getCard = getCard;
exports.getCards = getCards;
exports.shuffle = shuffle;
exports.makeDeck = makeDeck;
exports.printDeck = printDeck;
/* Card-ReactTemplate Not a pure module */
