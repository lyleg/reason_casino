// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List               = require("bs-platform/lib/js/list.js");
var Pervasives         = require("bs-platform/lib/js/pervasives.js");
var Card$ReactTemplate = require("./Card.bs.js");
var Deck$ReactTemplate = require("./Deck.bs.js");

function dealToPlayers(_board, _playersToBeDelt, numCards) {
  while(true) {
    var playersToBeDelt = _playersToBeDelt;
    var board = _board;
    if (playersToBeDelt) {
      var hd = playersToBeDelt[0];
      var match = Deck$ReactTemplate.getCards(/* [] */0, board[0], numCards);
      var playerWithNewCard_000 = /* id */hd[/* id */0];
      var playerWithNewCard_001 = /* hand */match[0];
      var playerWithNewCard_002 = /* money */hd[/* money */2];
      var playerWithNewCard_003 = /* name */hd[/* name */3];
      var playerWithNewCard_004 = /* src */hd[/* src */4];
      var playerWithNewCard = /* record */[
        playerWithNewCard_000,
        playerWithNewCard_001,
        playerWithNewCard_002,
        playerWithNewCard_003,
        playerWithNewCard_004
      ];
      var newPlayers = List.append(board[1], /* :: */[
            playerWithNewCard,
            /* [] */0
          ]);
      var newBoard_000 = match[1];
      var newBoard = /* tuple */[
        newBoard_000,
        newPlayers
      ];
      _playersToBeDelt = playersToBeDelt[1];
      _board = newBoard;
      continue ;
      
    } else {
      return board;
    }
  };
}

function dealToDealer(deck, dealer, numCards) {
  var match = Deck$ReactTemplate.getCards(/* [] */0, deck, numCards);
  var dealerWithNewCard_000 = /* id */dealer[/* id */0];
  var dealerWithNewCard_001 = /* hand */match[0];
  var dealerWithNewCard_002 = /* money */dealer[/* money */2];
  var dealerWithNewCard_003 = /* name */dealer[/* name */3];
  var dealerWithNewCard_004 = /* src */dealer[/* src */4];
  var dealerWithNewCard = /* record */[
    dealerWithNewCard_000,
    dealerWithNewCard_001,
    dealerWithNewCard_002,
    dealerWithNewCard_003,
    dealerWithNewCard_004
  ];
  return /* tuple */[
          match[1],
          dealerWithNewCard
        ];
}

function deal(players) {
  var deck = Deck$ReactTemplate.makeDeck(/* () */0);
  var shuffledDeck = Deck$ReactTemplate.shuffle(deck);
  var board = /* tuple */[
    shuffledDeck,
    /* [] */0
  ];
  return dealToPlayers(board, players, 2);
}

function printPlayers(players) {
  return List.map((function (player) {
                console.log("****** Player " + (Pervasives.string_of_int(player[/* id */0]) + " *******"));
                return List.map((function (card) {
                              console.log(Card$ReactTemplate.printCard(card));
                              return /* () */0;
                            }), player[/* hand */1]);
              }), players);
}

exports.dealToPlayers = dealToPlayers;
exports.dealToDealer  = dealToDealer;
exports.deal          = deal;
exports.printPlayers  = printPlayers;
/* Card-ReactTemplate Not a pure module */
