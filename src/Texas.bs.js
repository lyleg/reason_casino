// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block                      = require("bs-platform/lib/js/block.js");
var Curry                      = require("bs-platform/lib/js/curry.js");
var React                      = require("react");
var ReasonReact                = require("reason-react/src/ReasonReact.js");
var TexasGame$ReactTemplate    = require("./TexasGame.bs.js");
var PokerStats$ReactTemplate   = require("./components/PokerStats.bs.js");
var PokerPrompt$ReactTemplate  = require("./components/PokerPrompt.bs.js");
var PrintPlayers$ReactTemplate = require("./components/PrintPlayers.bs.js");

var component = ReasonReact.reducerComponent("Texas");

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      return React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, PrintPlayers$ReactTemplate.make(self[/* state */2][/* players */1], self[/* state */2][/* dealer */3], /* array */[])), ReasonReact.element(/* None */0, /* None */0, PokerPrompt$ReactTemplate.make(self[/* state */2][/* round */2], (function (action) {
                            return Curry._1(self[/* send */4], action);
                          }), /* array */[])), ReasonReact.element(/* None */0, /* None */0, PokerStats$ReactTemplate.make(self[/* state */2][/* round */2], self[/* state */2][/* players */1], self[/* state */2][/* pool */4], /* array */[])));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* deck : [] */0,
              /* players : :: */[
                /* record */[
                  /* id */1,
                  /* hand : [] */0,
                  /* name */"John"
                ],
                /* :: */[
                  /* record */[
                    /* id */2,
                    /* hand : [] */0,
                    /* name */"Lyle"
                  ],
                  /* [] */0
                ]
              ],
              /* round : PreFlop */0,
              /* dealer : record */[
                /* id */1,
                /* hand : [] */0,
                /* name */"Dealer"
              ],
              /* pool */0
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      var exit = 0;
      if (typeof action === "number") {
        var match = TexasGame$ReactTemplate.deal(state[/* players */1]);
        return /* Update */Block.__(0, [/* record */[
                    /* deck */match[0],
                    /* players */match[1],
                    /* round : Flop */1,
                    /* dealer */state[/* dealer */3],
                    /* pool */state[/* pool */4]
                  ]]);
      } else {
        switch (action.tag | 0) {
          case 0 : 
              var wager = action[0] >= 2 ? 100 : 0;
              var pool = state[/* pool */4] + wager | 0;
              return /* Update */Block.__(0, [/* record */[
                          /* deck */state[/* deck */0],
                          /* players */state[/* players */1],
                          /* round : Middle */2,
                          /* dealer */state[/* dealer */3],
                          /* pool */pool
                        ]]);
          case 1 : 
          case 2 : 
              exit = 1;
              break;
          
        }
      }
      if (exit === 1) {
        return /* Update */Block.__(0, [/* record */[
                    /* deck */state[/* deck */0],
                    /* players */state[/* players */1],
                    /* round : Middle */2,
                    /* dealer */state[/* dealer */3],
                    /* pool */state[/* pool */4]
                  ]]);
      }
      
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
